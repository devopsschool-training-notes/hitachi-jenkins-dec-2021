Jenkins Feedback
		Email
			Mailer Plugin - Basic
			Email Extension Plugin
How to enable jenkins to send an email?

Step 1 - Install following plugins
- Mailer Plugin - Basic
- Email Extension Plugin

Step 2 - Setup FROM email address on "System Admin e-mail address" http://13.235.81.87:8080/configure

Step 3 - Setup SMTP Server and test it.
- Go to http://13.235.81.87:8080/configure
- Locate "Extended E-mail Notification" for "Email Extension Plugin" & configure it
- Locate "E-mail Notification" for "Mailer Plugin - Basic" & configure it

Step 4 - Use it the job under "Post-build Actions"
- "E-mail Notification" is for "Mailer Plugin - Basic"
- "Editable Email Notification" is for "Email Extension Plugin"

How to enable jenkins to send an chat message using team and slack?

Step 1 - Install a jenkins plugins
- Office 365 Connector
- Slack Notification


Step 2 - Configure plugins at http://13.235.81.87:8080/configure
- Section called "Office 365 Connector"
- Section called "Slack"







		Chat
		Pipeline

Step 3 - Use in the Job

===========================================================
How to create a Pipeline jobs in Jenkins?
--------------------------------------------------

You can make pipeline using any one of the following ways.
- Use "Build Pipeline" plugin if you have already setup a jobs in Jenkins
- Use "Pipeline" plugin if you would like to CODE for the pipeline jobs in Jenkins

How to use "Build Pipeline" for creating pipeline?
Step 1 - Install "Build Pipeline" plugins

Step 2 - Create few sample jobs such as Scan,Compile,Test,Package

Step 3 - Link Each jobs to one another using Trigger another job after this Job AKA "Post Build Action" => "Build Other project"
- https://www.devopsschool.com/blog/trigger-jenkins-another-job-after-this-job-aka-post-build-action-build-other-project/

Step 4 - Create a Build Pipeline 
========================================================================
https://www.devopsschool.com/blog/jenkins-pipeline-complete-reference-tutorials/


https://www.devopsschool.com/blog/jenkins-pipeline-complete-reference-tutorials/
https://github.com/devopsschool-demo-labs-projects/helloworld-java-maven/blob/master/jenkinsfile1

Understanding Authentication and Authorization methods in jenkins

Authentication - How to login into Jenkins
Authorization - User's permissions to do in Jenkins

How to login into Jenkins or supported authentication methods in jenkins?
- Delegate to servlet container
- 'Jenkins' own user database
- LDAP
- Unix user/group database
- None

How to set user's permissions for setting up required access in Jenkins?
- Anyone can do anything
- Legacy mode
- Logged-in users can do anything



Matrix-based security

In this scheme, you can configure who can do what by using a big table.
Each column represents a permission. Hover the mouse over the permission names to get more information about what they represent.

Each row represents a user or a group (often called 'role', depending on the security realm.) This includes a special user 'anonymous', which represents unauthenticated users, as well as 'authenticated', which represents all authenticated users (IOW, everyone except anonymous users.) Use the text box below the table to add new users/groups/roles to the table, and click the [x] icon to remove it from the table.

Permissions are additive. That is, if an user X is in group A, B, and C, then the permissions that this user actually has are the union of all permissions given to X, A, B, C, and anonymous.

Project-based Matrix Authorization Strategy

This mode is an extension to "Matrix-based security" that allows additional ACL matrix to be defined for each project separately (which is done on the job configuration screen.)
This allows you to say things like "Joe can access project A, B, and C but he can't see D." See the help of "Matrix-based security" for the concept of matrix-based security in general.

ACLs are additive, so the access rights granted below will be effective for all the projects.

sudo usermod -a -G root jenkins

Jenkins Backup & Jenkins Restore
=====================================
Fundamental - 
Jenkins Store everything in xml file.


Plugins - Thinbackup
-------------------------

Jenkins Multibranch Job
-------





Jenkins Command Line
-------------------------------------------

who-am-i -username rajesh

who-am-i -username rajesh -password rajesh123

va -jar “/tmp/kitchen/cache/jenkins-cli.jar” -s http://localhost:8080 who-am-i –username jenkins –password foobar

–password mypassword


va -jar “/tmp/kitchen/cache/jenkins-cli.jar” -s http://localhost:8080 who-am-i –username jenkins –password foobar


Method 1 - Login to Jenkins using CLI and Username and Password
$ java -jar jenkins-cli.jar -s http://13.235.81.87:8080/ -auth rajesh:1190c7e6cb8e3b65515f8495966814ad58 who-am-i
$ java -jar jenkins-cli.jar -s http://13.235.81.87:8080/ -auth rajesh:1190c7e6cb8e3b65515f8495966814ad58 delete-job test


Method 2 - Login to Jenkins using CLI and Username and Key
$ java -jar jenkins-cli.jar -s http://13.235.81.87:8080/ -user rajesh -i C:\Users\Rajesh Kumar\.ssh\id_rsa who-am-i
ssh -l kohsuke -p 53801 localhost help


NOT WORKING - DATE 22 Dec 2021
Method 3 - Login to Jenkins using CLI and Username and Password
$ java -jar jenkins-cli.jar -s http://13.235.81.87:8080/ who-am-i –username rajesh –password rajesh123


==================================================================
How to troubleshooting?
====================================
Code Issues - Check with DEV

Environement Issues
- RAM
- HDD
- CPU
- TOOLS MISSING
- VERSION MISMTACH
- PATH issues
- Permisssion

Dependendent Services
- Plugins Issues
- 3rd Party tOOLS CONNECTION ISSUES
		- ldap
		- SLACK
		- MSTEAM
		- SMTP
		- nETWORK
		- PORT

learning
	
https://www.devopsschool.com/path/

=============================================================
rajesh@devopsschool.com

www.RajeshKumar.xyz


















